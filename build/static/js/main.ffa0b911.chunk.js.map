{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","useCallback","a","fetch","response","ok","Error","json","data","loadedMovies","push","console","log","message","method","body","JSON","stringify","headers","useEffect","content","length","MoviesList","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,wMCajBC,EAVD,SAACC,GACb,OACE,wBAAIC,UAAWC,IAAQC,OACrB,4BAAKH,EAAMI,OACX,4BAAKJ,EAAMK,aACX,2BAAIL,EAAMM,e,gBCWDC,EAfG,SAACP,GACjB,OACE,wBAAIC,UAAWC,IAAQ,gBACpBF,EAAMQ,OAAOC,KAAI,SAACN,GAAD,OAChB,kBAAC,EAAD,CACEO,IAAKP,EAAMQ,GACXP,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,YAAaH,EAAMG,mB,gBC0BdM,MAnCf,SAAkBZ,GAChB,IAAMa,EAAWC,iBAAO,IAClBC,EAAiBD,iBAAO,IACxBE,EAAiBF,iBAAO,IAa9B,OACE,0BAAMG,SAZR,SAAuBC,GACrBA,EAAMC,iBAGN,IAAMhB,EAAQ,CACZC,MAAOS,EAASO,QAAQC,MACxBf,YAAaS,EAAeK,QAAQC,MACpChB,YAAaW,EAAeI,QAAQC,OAEtCrB,EAAMsB,WAAWnB,KAIf,yBAAKF,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOd,GAAG,QAAQe,IAAKb,KAErC,yBAAKZ,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,gBAAf,gBACA,8BAAUG,KAAK,IAAIhB,GAAG,eAAee,IAAKX,KAE5C,yBAAKd,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,QAAf,gBACA,2BAAOC,KAAK,OAAOd,GAAG,OAAOe,IAAKV,KAEpC,+C,MCoDSY,MAhFf,WACE,MAA2BC,mBAAS,IAApC,mBAAOrB,EAAP,KAAesB,EAAf,KACA,EAAiCD,oBAAS,GAA1C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEOC,EAAmBC,sBAAW,sBAAC,kCAAAC,EAAA,6DACpCL,GAAa,GADuB,SAGlCE,EAAS,MAHyB,SAIXI,MAAM,0FAJK,WAI5BC,EAJ4B,QAKrBC,GALqB,sBAM1B,IAAIC,MAAM,wBANgB,wBAQhBF,EAASG,OARO,QAUlC,IAAUhC,KAFJiC,EAR4B,OAS5BC,EAAa,GACFD,EACfC,EAAaC,KAAK,CAChBlC,GAAID,EACJN,MAAOuC,EAAKjC,GAAKN,MACjBE,YAAaqC,EAAKjC,GAAKJ,YACvBD,YAAasC,EAAKjC,GAAKL,cAG1ByC,QAAQC,IAAIJ,GAEXb,EAAUc,GApBsB,kDAuBlCV,EAAS,KAAMc,SAvBmB,QAyBpChB,GAAa,GAzBuB,0DA0BnC,IA/BU,4CAqCb,WAA+B7B,GAA/B,iBAAAkC,EAAA,sEACyBC,MAAM,yFAA0F,CAC9GW,OAAQ,OACRC,KAAMC,KAAKC,UAAUjD,GACrBkD,QAAS,CACP,eAAe,sBAL5B,cACQd,EADR,gBAQsBA,EAASG,OAR/B,OAQUC,EARV,OASIG,QAAQC,IAAIJ,GAThB,4CArCa,sBAiCbW,qBAAU,WACRnB,MACC,CAACA,IAeJ,IAAIoB,EAAU,6CAWd,OAVG/C,EAAOgD,OAAS,IACjBD,EAAU,kBAACE,EAAD,CAAYjD,OAAQA,KAE7ByB,IACDsB,EAAQ,2BAAItB,IAEVF,IACFwB,EAAU,0CAIV,kBAAC,IAAMG,SAAP,KACE,iCACA,kBAAC,EAAD,CAAUpC,WAhED,+CAkET,iCACE,4BAAQqC,QAASxB,GAAjB,iBAEF,iCAKEoB,KC1ERK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ffa0b911.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__3mOnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__2xFIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__1HQbk\"};","import React from 'react';\r\n\r\nimport classes from './Movie.module.css';\r\n\r\nconst Movie = (props) => {\r\n  return (\r\n    <li className={classes.movie}>\r\n      <h2>{props.title}</h2>\r\n      <h3>{props.releaseDate}</h3>\r\n      <p>{props.openingText}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nimport Movie from './Movie';\r\nimport classes from './MoviesList.module.css';\r\n\r\nconst MovieList = (props) => {\r\n  return (\r\n    <ul className={classes['movies-list']}>\r\n      {props.movies.map((movie) => (\r\n        <Movie\r\n          key={movie.id}\r\n          title={movie.title}\r\n          releaseDate={movie.releaseDate}\r\n          openingText={movie.openingText}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useRef } from 'react';\r\n\r\nimport classes from './AddMovie.module.css';\r\n\r\nfunction AddMovie(props) {\r\n  const titleRef = useRef('');\r\n  const openingTextRef = useRef('');\r\n  const releaseDateRef = useRef('');\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    // could add validation here...\r\n    const movie = {\r\n      title: titleRef.current.value,\r\n      openingText: openingTextRef.current.value,\r\n      releaseDate: releaseDateRef.current.value,\r\n    };\r\n    props.onAddMovie(movie);\r\n  }\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor='title'>Title</label>\r\n        <input type='text' id='title' ref={titleRef} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='opening-text'>Opening Text</label>\r\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='date'>Release Date</label>\r\n        <input type='text' id='date' ref={releaseDateRef} />\r\n      </div>\r\n      <button>Add Movie</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddMovie;\r\n","import React, {useState, useEffect, useCallback} from 'react';\r\n\r\nimport MoviesList from './components/MoviesList';\r\nimport AddMovie from './components/AddMovie';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [movies, setMovies]= useState([]);\r\n  const [isLoading, setIsLoading] =useState(false);\r\n  const [error, setError] = useState(null)\r\n\r\n   const fetchMovieHandler =useCallback(async ()=> {\r\n    setIsLoading(true);\r\n    try {\r\n      setError(null);\r\n      const response = await fetch('https://react-http-2cbaf-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json')\r\n      if(!response.ok) {\r\n        throw new Error(\"something went wrong\")\r\n      }\r\n      const data= await response.json();\r\n      const loadedMovies=[];\r\n      for(const key in data) {\r\n        loadedMovies.push({\r\n          id: key,\r\n          title: data[key].title,\r\n          openingText: data[key].openingText,\r\n          releaseDate: data[key].releaseDate\r\n        })\r\n      }\r\n       console.log(data)\r\n       \r\n        setMovies(loadedMovies);\r\n       \r\n    } catch (error) {\r\n      setError(error.message)\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n  \r\n  useEffect(()=> {\r\n    fetchMovieHandler();\r\n  }, [fetchMovieHandler])\r\n\r\n  async function addMovieHandler(movie) {\r\n    const response = await fetch('https://react-http-2cbaf-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json', {\r\n             method: 'POST',\r\n             body: JSON.stringify(movie),\r\n             headers: {\r\n               'Content-type':'application/json'\r\n             }\r\n      });\r\n      const data= await response.json();\r\n      console.log(data);\r\n  }\r\n\r\n  //this is advance version of line 53 to 56 start\r\n  let content = <p>Found no movie</p> \r\n  if(movies.length > 0) {\r\n    content = <MoviesList movies={movies} />\r\n  }\r\n  if(error) {\r\n    content=<p>{error}</p>\r\n  }\r\n  if (isLoading) {\r\n    content = <p>Loading...</p>\r\n  }\r\n  //this is advance version of line 53 to 56 end\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n      <AddMovie onAddMovie={addMovieHandler} />\r\n      </section>\r\n      <section>\r\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\r\n      </section>\r\n      <section>\r\n        {/* {!isLoading && movies.length>0 && <MoviesList movies={movies} />}\r\n        {!isLoading && movies.length ===0 && !error && <p>Movie is not found</p>}\r\n        {isLoading && <p>Loading...</p>}\r\n        {!isLoading && error &&<p>{error}</p>} */}\r\n       {content}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}